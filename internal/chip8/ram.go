package chip8

type Ram struct {
		buf [4096]uint8
}

func (r *Ram) Write(i uint16, v uint8) {
		r.buf[i] = v
}

func (r *Ram) Load(stream []uint8) {
		// MemoryMap: http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#memmap
		r.loadFontset()

		presetSize := uint16(0x200)
		for i, byte := range stream {
				r.Write(presetSize + uint16(i), byte)
		}
}

func (r *Ram) loadFontset() {
		fontset := [][]uint8{
				{0xF0, 0x90, 0x90, 0x90, 0xF0}, // 0
				{0x20, 0x60, 0x20, 0x20, 0x70}, // 1
				{0xF0, 0x10, 0xF0, 0x80, 0xF0}, // 2
				{0xF0, 0x10, 0xF0, 0x10, 0xF0}, // 3
				{0x90, 0x90, 0xF0, 0x10, 0x10}, // 4
				{0xF0, 0x80, 0xF0, 0x10, 0xF0}, // 5
				{0xF0, 0x80, 0xF0, 0x90, 0xF0}, // 6
				{0xF0, 0x10, 0x20, 0x40, 0x40}, // 7
				{0xF0, 0x90, 0xF0, 0x90, 0xF0}, // 8
				{0xF0, 0x90, 0xF0, 0x10, 0xF0}, // 9
				{0xF0, 0x90, 0xF0, 0x90, 0x90}, // A
				{0xE0, 0x90, 0xE0, 0x90, 0xE0}, // B
				{0xF0, 0x80, 0x80, 0x80, 0xF0}, // C
				{0xE0, 0x90, 0x90, 0x90, 0xE0}, // D
				{0xF0, 0x80, 0xF0, 0x80, 0xF0}, // E
				{0xF0, 0x80, 0xF0, 0x80, 0x80}, // F
		}

		var addr uint16 = 0x0000
		for _, row := range fontset {
				for _, b := range row {
						r.Write(addr, b)
						addr++
				}
		}
}